var startValue = '0.00000001', // Don't lower the decimal point more than 4x of current balance
    stopPercentage = 0.001, // In %. I wouldn't recommend going past 0.08
    maxWait = 150, // In milliseconds
    stopped = false,
    stopBefore = 3; // In minutes

var $loButton = $('#double_your_btc_bet_lo_button'),
    $hiButton = $('#double_your_btc_bet_hi_button'),
    $stake = $('#double_your_btc_stake'),
    $payout = $('#double_your_btc_payout_multiplier'),
    $lose = $('#double_your_btc_bet_lose'),
    $win = $('#double_your_btc_bet_win'),
    $btn = $loButton;

var hiSide = false;

function multiply(){
  var current = $stake.val();
  var multiply = (current * 2).toFixed(8);
  $stake.val(multiply);
}
function randomIntFromInterval(min,max)
{
    return Math.floor(Math.random()*(max-min+1)+min);
}
function getRandomWait(){
  var wait = randomIntFromInterval(50, maxWait);
  console.log('Waiting for ' + wait + 'ms before next bet.');
  return wait ;
}

function reset(){
  $stake.val(startValue);
}
function startGame(){
  console.log('Game started!');
  reset();
  $btn.trigger('click');
}
function stopGame(){
  console.log('Game will stop soon! Let me finish.');
  stopped = true;
}
// quick and dirty hack if you have very little bitcoins like 0.0000001
function deexponentize(number){
  return number * 1000000;
}
function iHaveEnoughMoni(){
  var balance = deexponentize(parseFloat($('#balance').text()));
  var current = deexponentize($stake.val());
  return ((balance*2)/100) * (current*2) > stopPercentage/100;
}
function stopBeforeRedirect(){
  var minutes = parseInt($('title').text());
  if( minutes < stopBefore )
  {
    console.log('Approaching redirect! Stop the game so we don\'t get redirected while loosing.');
    stopGame();
    return true;
  }
  return false;
}

function nextSide(won) {
  if (!won) {
    hiSide = !hiSide;
  }

  if (hiSide) {
    $btn = $hiButton;
  } else {
    $btn = $loButton;
  }
}

function nextClick() {
  setTimeout(function(){
    $btn.trigger('click');
  }, getRandomWait());
}
// Unbind old shit
$lose.unbind();
$win.unbind();
// Loser
$lose.bind("DOMSubtreeModified",function(event){
  if( $(event.currentTarget).is(':contains("lose")') )
  {
    console.log('You LOST! Multiplying your bet and betting again.');

    nextSide(false);

    multiply();
    nextClick();
  }
});
// Winner
$win.bind("DOMSubtreeModified",function(event){
  if( $(event.currentTarget).is(':contains("win")') )
  {
    if( stopBeforeRedirect() )
    {
      return;
    }
    if( iHaveEnoughMoni() )
    {
      console.log('You WON! But don\'t be greedy. Restarting!');
      reset();
      if( stopped )
      {
        stopped = false;
        return false;
      }
    }
    else
    {
      nextSide(true);
      console.log('You WON! Betting again');
    }
    nextClick();
  }
});
startGame() 